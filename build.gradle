plugins {
    id 'java'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.1.1'
}

group = 'io.github.uniclog'
version = '1.4'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'io.github.uniclog.jsticky'
    mainClass = 'io.github.uniclog.jsticky.App'
}

javafx {
    version = '23'
    modules = ['javafx.controls', 'javafx.fxml']
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

dependencies {
    implementation 'org.openjfx:javafx-controls:17'

    implementation('org.fxmisc.richtext:richtextfx:0.11.4')
    implementation('com.google.code.gson:gson:2.12.1')
    annotationProcessor('org.projectlombok:lombok:1.18.36')
    implementation('org.projectlombok:lombok:1.18.36')

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.2')
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = layout.buildDirectory.file("distributions/${rootProject.name}-${javafx.platform.classifier}-${version}.zip").get()
    options = ['--strip-debug', '--compress', '0', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${rootProject.name}-${version}"
        noConsole = true
        jvmArgs = ['-Xmx256m', '-Xms60m']
    }
    jpackage {
        appVersion = "${version}"
        vendor = 'io.github.uniclog'
        icon = "src/main/resources/io/github/uniclog/jsticky/img/icon.ico"
        imageOptions += [
                "--vendor", "Uniclog Software",
                '--app-version', version
        ]
        installerType = 'msi'
        installerOptions = [
                '--win-dir-chooser', '--win-shortcut'
        ]
    }
}

tasks.jpackage.doFirst {
    copy {
        from "data/dictionaries"
        include "*.dic"
        into "build/jpackage/${rootProject.name}-${version}/data/dictionaries"
    }
}

jlinkZip {
    group = 'distribution'
}
